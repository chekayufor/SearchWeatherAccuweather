{"version":3,"sources":["components/Api.js","components/ContextProvider.js","components/global.styles.js","components/Search.jsx","components/WeatherForecast.jsx","components/SingleDayWeather.jsx","components/App.jsx","components/Favorites.jsx","components/TopBar.jsx","components/Links.jsx","components/Root.jsx","index.js"],"names":["API_KEY","API_HOST","Geolocation","concat","WeatherApiUrl","key","getLocations","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","response","locations","wrap","_context","prev","next","fetch","param","group","sent","ok","Error","json","abrupt","stop","apply","this","arguments","getStartGeolocation","_ref2","_callee2","geolocation","_context2","getWeather","_ref3","_callee3","weather","_context3","_x","Context","React","createContext","Provider","GlobalStyles","createGlobalStyle","_templateObject","Search","_useContext","useContext","handleOnChange","locationsApi","react_default","createElement","Box","react_select_browser_esm","classNamePrefix","placeholder","isSearchable","name","options","onChange","selectedOption","label","code","value","styled","div","Search_templateObject","WeatherForecast","weatherForcast","handleDaySelection","temperatureConverter","selectedDay","console","log","Div","Ul","map","index","Date","Temperature","Day","Li","onClick","EpochDate","dist_default","format","Img","src","Icon","alt","H1","Maximum","Value","WeatherForecast_templateObject","ul","_templateObject2","li","_templateObject3","h1","_templateObject4","img","_templateObject5","SingleDayWeather","selectedCity","selectedCountry","pick","isAdd","check","city","SingleDayWeatherContainer","Container","SingleDayWeather_Div","Button","Text","Minimum","SingleDayWeather_Img","IconPhrase","SingleDayWeather_templateObject","SingleDayWeather_templateObject2","SingleDayWeather_templateObject3","SingleDayWeather_templateObject4","SingleDayWeather_templateObject5","button","_templateObject6","App","children","is_loading","App_Box","SearchContainer","ContentBox","components_SingleDayWeather","components_WeatherForecast","global_styles","App_templateObject","App_templateObject2","App_templateObject3","Favorites","favorite","favoriteWeather","Favorites_Box","Favorites_Ul","i","w","Favorites_Li","DailyForecasts","Favorites_Img","Favorites_templateObject","Favorites_templateObject2","Favorites_templateObject3","Favorites_templateObject4","TopBar","TopBar_Box","TopBar_Text","TopBar_templateObject","TopBar_templateObject2","Links","Nav","Links_Li","StyledLink","to","smooth","Link","Links_templateObject","Links_templateObject2","Links_templateObject3","Root","react_router_dom","AppContainer","components_TopBar","components_Links","react_router","exact","path","component","Root_templateObject","ReactDOM","render","_useState","useState","_useState2","slicedToArray","setIs_loading","_useState3","_useState4","setLocationsApi","_useState5","_useState6","setSelectedCity","_useState7","_useState8","setSelectedCountry","_useState9","_useState10","setWeatherForcast","_useState11","_useState12","selectedDayWeather","setSelectedDayWeather","_useState13","_useState14","setSelectedDay","_useState15","JSON","parse","window","localStorage","getItem","_useState16","setFavorite","_useState17","_useState18","setFavoriteWeather","_useState19","_useState20","setIsAdd","useEffect","setItem","stringify","favWeather","getForcast","forecast","API","getForcastFavorite","forecastFav","_x2","_ref4","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_iterator","_step","undefined","Symbol","iterator","done","push","t0","return","finish","Promise","all","_ref5","_callee4","cityCountry","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_iterator2","_step2","location","id","_context4","AdministrativeArea","EnglishName","Country","ID","Key","_ref6","_callee5","country","_context5","state","actions","valNum","parseInt","Math","floor","forEach","filter","toConsumableArray","objectSpread","components_Root","document","getElementById"],"mappings":"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","file":"static/js/main.78d74d2f.chunk.js","sourcesContent":["const API_KEY = \"RceXNNQrrmcHJmkRllSgpfFP2oqIQ3YH\";\nconst API_HOST = 'http://dataservice.accuweather.com/';\nconst API_VERSION = 'v1';\n\n\nconst LocationApiUrl = (param, group) => `${API_HOST}locations/${API_VERSION}/${param}/${group}?apikey=${API_KEY}`;\n\nconst Geolocation = `${API_HOST}locations/${API_VERSION}/cities/geoposition/search?apikey=${API_KEY}&q=32.045%2C%2034.77&language=en`;\n\nconst WeatherApiUrl = key => `${API_HOST}forecasts/${API_VERSION}/daily/5day/${key}?apikey=${API_KEY}`;\n\nexport  const getLocations = async()=> {\n    const response = await fetch(LocationApiUrl('topcities', 100));\n    if (!response.ok) throw new Error(\"Network response was not ok.\");\n    const locations = await response.json();\n    return locations\n}\n\nexport  const getStartGeolocation = async()=> {\n    const response = await fetch(Geolocation);\n    if (!response.ok) throw new Error(\"Network response was not ok.\");\n    const geolocation = await response.json();\n    return geolocation;\n}\n\nexport const getWeather= async(key)=> {\n    const response = await fetch(WeatherApiUrl(key));\n    if (!response.ok) throw new Error(\"Network response was not ok.\");\n    const weather = await response.json();\n    return weather;\n}\n","import React, { useState, useEffect } from \"react\";\nimport * as API from './Api'\n\nconst Context = React.createContext();\nconst { Provider } = Context;\n\nconst ContextProvider = ({ children }) => {\n  //state\n  const [is_loading, setIs_loading] = useState(true);\n  const [locationsApi, setLocationsApi] = useState([]);\n  const [selectedCity, setSelectedCity] = useState({});\n  const [selectedCountry, setSelectedCountry] = useState(\"\");\n  const [weatherForcast, setWeatherForcast] = useState([]);\n  const [selectedDayWeather, setSelectedDayWeather] = useState(null);\n  const [selectedDay, setSelectedDay] = useState(0);\n  const initialArray = () => JSON.parse(window.localStorage.getItem('favorites') || \"[]\");\n  const [favorite, setFavorite] = useState(initialArray);\n  const [favoriteWeather, setFavoriteWeather] = useState([]);\n    const [isAdd, setIsAdd] = useState('📌');\n\n\n  \n  //component did mount\n  useEffect(() => {\n    getLocations();\n    getStartGeolocation();\n    setIs_loading(false);\n  },[]);\n  \n  useEffect(() => {\n    window.localStorage.setItem('favorites', JSON.stringify(favorite));\n    favWeather();\n  }, [favorite])\n  \n\n  //get selected weather \n  const getForcast = async key => {\n    const forecast = await API.getWeather(key);\n    console.log({forecast})\n    setWeatherForcast(forecast.DailyForecasts);\n    setSelectedDayWeather(forecast.DailyForecasts[selectedDay])\n  };\n\n  const getForcastFavorite = async key => {\n    const forecastFav = await API.getWeather(key);\n    console.log({forecastFav});\n    console.log('forecastFav.DailyForecasts[0],', forecastFav.DailyForecasts[0]);\n    // setWeatherForcastFav(forecastFav.DailyForecasts[0]);\n    return forecastFav;\n  };\n  const favWeather = async () => {\n    let weather = []; \n    //  favorite.forEach(async i => {\n    //   let key = i.code\n    //  let w = await getForcastFavorite(key);\n    //   return weather.push({i, w});\n    // })\n    for(let i of favorite){\n      // console.log({i})\n      let key = i.code;\n      let w = await getForcastFavorite(key);\n       weather.push({i, w});\n      //  weather.push( w);\n    }\n    await Promise.all(weather);\n    console.log({weather});\n    setFavoriteWeather(weather)\n  }\n\n  //location Autocomplete\n  const getLocations = async () => {\n    const locations = await API.getLocations();\n    console.log({ locations });\n    const cityCountry = [];\n    for (let location of locations) {\n      let label = location.AdministrativeArea.EnglishName;\n      let id = location.Country.ID;\n      let value = location.Country.EnglishName;\n      let code = location.Key;\n      cityCountry.push({ id, label, value, code });\n    }\n    setLocationsApi(cityCountry);\n  };\n\n  //start point geolocation in Tel Aviv\n  const getStartGeolocation = async() => {\n    const geolocation = await API.getStartGeolocation();\n    // console.log({geolocation})\n    const city = geolocation.EnglishName;\n    const code = geolocation.Key;\n    const country = geolocation.Country.EnglishName\n    let s = {city, code}\n    setSelectedCity(s);\n    getForcast(code);\n    setSelectedCountry(country);\n  }  \n\n  const handleOnChange = (city, code, country) => {\n    let s = {city, code}\n    setSelectedCity(s);\n    setSelectedCountry(country);\n    getForcast(code);\n\n  };\n\n  const handleDaySelection = i => {\n    setSelectedDay(i);\n  };\n\n  const temperatureConverter = (valNum)=> {\n    valNum = parseInt(valNum);\n    return Math.floor((valNum - 32) / 1.8);\n  }\n\n  const check = () =>{\n    let check = false;\n    let {city, code} = selectedCity;\n    favorite.forEach(i => {\n        if (i.city === city) return check = true;\n    })\n    return (check === true) ? setIsAdd('❤' ) : setIsAdd('📌');\n  }\n  \n  const pick = (selectedCity) => {\n    let check = false;\n    let {city, code} = selectedCity;\n    favorite.forEach(i => {\n        if (i.city === city) return check = true;\n    })\n    if(check === true) setFavorite(favorite.filter(i => i.city !== city));\n    else setFavorite([...favorite, selectedCity]);\n\n  }\n\n  \n\n  const state = {\n    locationsApi,\n    selectedCity,\n    selectedCountry,\n    weatherForcast,\n    selectedDay,\n    is_loading,\n    selectedDayWeather,\n    favorite,\n    isAdd\n    };\n\n  const actions = {\n    handleOnChange,\n    handleDaySelection,\n    temperatureConverter,\n    pick,\n    check,\n    favoriteWeather\n  };\n\n  return <Provider value={{ ...state, ...actions }}> {children} </Provider>;\n};\n\nexport { ContextProvider, Context };\n","import { createGlobalStyle } from \"styled-components\";\n\nconst GlobalStyles = createGlobalStyle`\n    @import url(\"https://fonts.googleapis.com/css?family=Expletus+Sans|Raleway|Griffy|Yanone+Kaffeesatz:400,700\");\n\n    html,\n    body {\n      height: 100%;\n      width:100%;\n      margin: 0;\n      padding: 0;\n      box-sizing: border-box;\n    }\n    html {\n      font-size: 10px;\n    }\n`;\n\nexport default GlobalStyles;\n","import React, { useContext } from \"react\";\nimport Select from \"react-select\";\nimport { Context } from \"./ContextProvider\";\nimport styled from \"styled-components\";\n\nconst Search = () => {\n  let { handleOnChange, locationsApi} = useContext(Context);\n\n  return (\n    <Box>\n      <Select\n        classNamePrefix=\"select\"\n        placeholder=\"Search a city...\"\n        isSearchable=\"true\"\n        name=\"cities\"\n        options={locationsApi}\n        onChange={selectedOption =>\n          handleOnChange(selectedOption.label, selectedOption.code, selectedOption.value)\n        }\n        />\n     </Box>\n  );\n};\nexport default Search;\n\nconst Box = styled.div`\n  display : grid;\n  margin: 2.5rem 1.5rem;\n  width: 80%;\n  color: slategrey;\n\n`","import React, { useContext} from \"react\";\nimport { Context } from \"./ContextProvider\";\nimport styled from \"styled-components\";\nimport Moment from \"react-moment\";\n\nconst WeatherForecast = () => {\n  let {weatherForcast, handleDaySelection, temperatureConverter, selectedDay} = useContext(Context);\n  console.log({ weatherForcast });\n\n  return (\n   <Div>\n       <Ul>\n           {weatherForcast.map(({Date, Day,Temperature}, index) => {\n               return(\n                   <Li\n                        onClick = {() => handleDaySelection(index)}\n                        key={weatherForcast[selectedDay].Day.EpochDate}>\n                       <Moment format='ddd' >{Date}</Moment>\n                       <Img\n                            src={`https://developer.accuweather.com/sites/default/files/${\n                            weatherForcast[index].Day.Icon >= 10\n                                ? weatherForcast[index].Day.Icon\n                                : \"0\" + weatherForcast[index].Day.Icon\n                            }-s.png`}\n                            alt=\"weather-icon\"\n                        />\n                       <H1>{`${temperatureConverter(Temperature.Maximum.Value)} °C`}</H1>\n                   </Li>\n               )\n           })}\n       </Ul>\n   </Div>\n  );\n};\n\nexport default WeatherForecast;\n\nconst Div = styled.div`\n    grid-area: 2/1/3/2;\n    display: grid;\n\n`\nconst Ul = styled.ul`\n    display: grid;\n    grid-template-columns: repeat(2, 1fr);   \n    grid-template-rows: repeat(3, 1fr);\n    list-style: none;\n    margin: 3px;\n    padding: 0;\n    @media (min-width: 768px) {\n        grid-template-columns: repeat(5, 1fr);   \n        grid-template-rows: 100%;\n    }\n`\nconst Li = styled.li`\n    text-align: center;\n    align-self: stretch;\n    align-items: center;\n    border-radius: 0.4rem;\n    border: darkgrey 0.2rem dashed;\n    background-color: #90a4b7;\n    margin: 5px;\n    display: grid;\n`\nconst H1 = styled.h1`\n    font-size: 2.0rem;\n`\nconst Img = styled.img`\n    width:auto;\n    justify-self: center;\n`","import React, { useContext, useState } from \"react\";\nimport { Context } from \"./ContextProvider\";\nimport styled from \"styled-components\";\nimport Moment from \"react-moment\";\n\nconst SingleDayWeather = () => {\n  let {weatherForcast, selectedCity,selectedCountry, selectedDay, temperatureConverter, pick, isAdd, check} = useContext(Context);\n  check();\n  // console.log({isAdd})\n  // console.log({selectedCity})\n  let {city, code} = selectedCity;\n  \n  return (\n    <SingleDayWeatherContainer>\n       {weatherForcast[0] ? (\n        <Container>\n             <Div>\n                <h2>{`${city}, (${selectedCountry})`}</h2>\n                  <Button onClick={()=> {pick(selectedCity)}}>{isAdd}</Button>\n                <h5><Moment format=\"dddd, MMM Do YYYY\">{weatherForcast[selectedDay].Date}</Moment></h5>\n                <Text>\n                  <h5>{`Max temperature: ${temperatureConverter(weatherForcast[selectedDay].Temperature.Maximum.Value)} °C`} </h5>\n                  <span> ~ </span>\n                  <h5>{`Min temperature: ${temperatureConverter(weatherForcast[selectedDay].Temperature.Minimum.Value)} °C`}</h5>\n                </Text>\n              </Div>\n              <Div>\n                <Img\n                  src={`https://developer.accuweather.com/sites/default/files/${\n                    weatherForcast[selectedDay].Day.Icon >= 10\n                      ? weatherForcast[selectedDay].Day.Icon\n                      : \"0\" + weatherForcast[selectedDay].Day.Icon\n                  }-s.png`}\n                  alt=\"weather-icon\"\n                />\n                <h2>{weatherForcast[selectedDay].Day.IconPhrase}</h2>\n              </Div>\n        </Container>\n      ) : null}\n    </SingleDayWeatherContainer>\n  );\n};\n\nexport default SingleDayWeather;\n\nconst SingleDayWeatherContainer = styled.div`\n  grid-area:1/1/2/2;\n  display: grid;\n  justify-content: center;\n  align-content: center;\n  color: slategrey;\n`\nconst Container = styled.div`\n  display: grid;\n  grid-template-columns: 100%;   \n  grid-template-rows: repeat(2, 1fr);\n  align-self: center;\n  justify-items: center;\n`\nconst Div = styled.div`\n  text-align: center;\n  display: grid;\n`\nconst Img = styled.img`\n  height: 200px;\n  justify-self: center;\n`\nconst Text = styled.div`\n  display: grid;\n  @media (min-width: 768px) {\n    grid-template-columns: 1fr auto 1fr;   \n    grid-template-rows: 100%;\n  }\n`\nconst Button = styled.button`\nmargin: 0;\npadding: 0;\nborder: 0;\nposition: relative;\nfont-size: 5rem;\ncolor: red;\nbackground-color: #dadcd3;\n`","import React, { useContext } from \"react\";\nimport styled from \"styled-components\";\nimport GlobalStyles from \"./global.styles\";\nimport { Context } from \"./ContextProvider\";\nimport Search from \"./Search\";\nimport WeatherForecast from \"./WeatherForecast\";\nimport SingleDayWeather from \"./SingleDayWeather\";\n\n\nconst App = ({ children }) => {\n  const { is_loading } = useContext(Context);\n  console.log({ is_loading });\n  //console.log({ children });\n  return (\n    <Box>\n      {/* {is_loading === false ? children : <h1>I am Loding...</h1>} */}\n           <SearchContainer />\n            <ContentBox>\n              <SingleDayWeather/>\n              <WeatherForecast/>\n            </ContentBox>\n      <GlobalStyles />\n    </Box>\n  );\n};\n\nexport default App;\n\nconst Box = styled.div`\n  grid-area: 2/1/3/2; \n  height:100%;\n  background: Cornsilk;\n  border-radius: 0.4rem;\n  display: grid;\n  grid-template-columns: 100%;\n  grid-template-rows:auto 1fr ;\n  box-shadow: 0 0.4rem 1.5rem DimGrey;\n  justify-items:center;\n  padding: 40px 0;\n`;\nconst SearchContainer = styled(Search)`\n  grid-area: 1/1/2/2; \n  width:80%;\n\n`\nconst ContentBox = styled.div`\n  grid-area: 2/1/3/2; \n  width:80%;\n  border-radius: 5px;\n  display: grid;\n  grid-template-columns: 100%;\n  grid-template-rows:2fr 1fr;\n  background-color: #dadcd3;\n  height: 100%;\n  margin-bottom: 20px;\n`;\n","import React, { useContext }  from \"react\";\nimport { Context } from \"./ContextProvider\";\nimport styled from \"styled-components\";\nimport GlobalStyles from \"./global.styles\";\nimport Moment from \"react-moment\";\n\n\nconst Favorites = () => {\n    let {favorite, temperatureConverter, favoriteWeather} = useContext(Context);\n    console.log({favorite});\n    console.log({favoriteWeather});\n    return (\n        <Box>\n            <Ul>\n                {favoriteWeather.map(({i, w}) => {\n                    return(\n                        <Li\n                            key={i.code}>\n                            <h4>{i.city}</h4>\n                            <Moment format='ddd' >{w.DailyForecasts[0].Date}</Moment>\n                       <Img\n                            src={`https://developer.accuweather.com/sites/default/files/${\n                                w.DailyForecasts[0].Day.Icon >= 10\n                                ? w.DailyForecasts[0].Day.Icon\n                                : \"0\" + w.DailyForecasts[0].Day.Icon\n                            }-s.png`}\n                            alt=\"weather-icon\"\n                        />\n                       <h5>{`${temperatureConverter(w.DailyForecasts[0].Temperature.Maximum.Value)} °C`}</h5>\n                        </Li>\n                    )\n                })}\n            </Ul>\n            <GlobalStyles />\n        </Box>\n\n    );\n};\nexport default Favorites;\n\nconst Box = styled.div`\n  grid-area: 2/1/3/2; \n  height:100%;\n  background: Cornsilk;\n  border-radius: 0.4rem;\n  display: grid;\n  grid-template-columns: 100%;\n  grid-template-rows:auto 1fr ;\n  box-shadow: 0 0.4rem 1.5rem DimGrey;\n`;\nconst Ul = styled.ul`\n    display: grid;\n    grid-template-columns: repeat(2, 1fr);   \n    // grid-template-rows: repeat(3, 1fr);\n    list-style: none;\n    margin: 3px;\n    padding: 0;\n    @media (min-width: 768px) {\n        grid-template-columns: repeat(5, 1fr);   \n        // grid-template-rows: 100%;\n    }\n`\nconst Li = styled.li`\n    text-align: center;\n    align-self: stretch;\n    border-radius: 0.4rem;\n    border: darkgrey 0.2rem dashed;\n    background-color: #90a4b7;\n    margin: 5px;\n    display: grid;\n`\nconst Img = styled.img`\n    width:auto;\n    justify-self: center;\n`","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst TopBar = ({ children }) => (\n  <Box>\n    <Text>{children}</Text>\n  </Box>\n);\n\nexport default TopBar;\n\nconst Box = styled.div`\n  grid-area:1/1/2/2;\n  background: slategray;\n  width: 100%;\n  height: 45px;\n  padding: 20px 0;\n  color: white;\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: 10;\n  display: flex;\n  align-items: center;\n  justify-content: flex-end;\n`;\n\nconst Text = styled.h1`\n  font-size: 3rem;\n  font-weight: normal;\n  font-family: \"Griffy\", cursive;\n  color: papayawhip;\n  cursor: pointer;\n  user-select: none;\n  position: relative;\n`;\n","import React from \"react\";\n// import { Link } from \"react-router-dom\";\nimport { HashLink as Link } from \"react-router-hash-link\";\nimport styled from \"styled-components\";\n\nconst Links = () => (\n  <Nav>\n    <Li>\n      <StyledLink to=\"/\" smooth>\n        Home\n      </StyledLink>\n    </Li>\n    <Li>\n      <StyledLink to=\"/favorites\" smooth>\n        Favorites\n      </StyledLink>\n    </Li>\n  </Nav>\n);\n\nexport default Links;\n\nconst StyledLink = styled(Link)`\n  color: mintcream;\n`;\n\nconst Nav = styled.ul`\n  padding:0 60px;\n  display: flex;\n  list-style-type: none;\n  font-family: \"Yanone Kaffeesatz\";\n  font-weight: 400;\n  font-size: 2.8rem;\n  // width: 30rem;\n  justify-content: space-between;\n`;\nconst Li = styled.li`\n  padding-right:10px;\n\n`","import React from \"react\";\nimport App from \"./App\";\nimport Favorites from \"./Favorites\";\n// import { Context } from \"./ContextProvider\";\nimport TopBar from \"./TopBar\";\nimport Links from \"./Links\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\n\n// import SingleDayWeather from \"./SingleDayWeather\";\n// import WeeklyWeatherContainer from \"./WeeklyWeatherContainer\";\n\n// import { styled } from \"./global.styles\";\nimport styled from \"styled-components\";\n\nconst Root = () => {\n  // let weatherForcast = useContext(Context);\n  return (\n    <Router>\n      <AppContainer>\n        <TopBar>\n          <Links/>\n        </TopBar>\n        <Route exact path=\"/\" component={App} />\n        <Route path=\"/favorites\" component={Favorites} />         \n      </AppContainer>\n    </Router>\n\n  );\n};\n\nexport default Root;\n\nconst AppContainer = styled.div`\n  text-align: left;\n  background-color: #9da9c1;\n  min-height: 100vh;\n  display: grid;\n  grid-template-columns: 100%;\n  grid-template-rows: 80px auto ;\n  align-items: center;\n  justify-content: center;\n  font-size: calc(10px + 2vmin);\n  color: white;\n`;\n\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n// import App from \"./components/App\";\nimport { ContextProvider } from \"./components/ContextProvider\";\nimport RootComponent from \"./components/Root\";\n// import \"./styles.css\";\n\nReactDOM.render(\n  <ContextProvider>\n    <RootComponent />\n  </ContextProvider>,\n  document.getElementById(\"root\")\n);\n// const rootElement = document.getElementById(\"root\");\n// ReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}